generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  balance  Decimal  @default(0) @db.Decimal(10, 2)

  sentTransactions     Transaction[] @relation("sender")
  receivedTransactions Transaction[] @relation("receiver")

  updatedAt DateTime  @default(now()) @updatedAt
  createdAt DateTime  @default(now())
  deletedAt DateTime?

  @@map("users")
}

model Transaction {
  id            Int      @id @default(autoincrement())
  amount        Decimal  @db.Decimal(10, 2)
  status        TransactionStatus @default(COMPLETED)
  type          TransactionType
  description   String?

  senderId      Int
  sender        User     @relation("sender", fields: [senderId], references: [id])
  
  receiverId    Int
  receiver      User     @relation("receiver", fields: [receiverId], references: [id])

  reversalTransaction   TransactionReversal?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  @@map("transactions")
}

model TransactionReversal {
  id            Int      @id @default(autoincrement())
  reason        String
  status        ReversalStatus @default(PENDING)
  
  transactionId Int      @unique
  transaction   Transaction @relation(fields: [transactionId], references: [id])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt

  @@map("transaction_reversals")
}

enum TransactionStatus {
  PENDING
  COMPLETED
  REVERSED
  FAILED
}

enum TransactionType {
  TRANSFER
  REVERSAL
}

enum ReversalStatus {
  PENDING
  APPROVED
  REJECTED
}